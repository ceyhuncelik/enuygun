{"version":3,"sources":["paths.js","constants/serviceConstants.js","thunks/serviceMiddleware.js","actions/serviceAction.js","selector.js","containers/Home/TvShowList.js","containers/Home/index.js","containers/About/index.js","containers/Header/index.js","containers/Footer/index.js","App.js","reducers/serviceReducer.js","configureStore.js","serviceWorker.js","index.js"],"names":["API_SEARCH","TV_SHOW_FETCHING","TV_SHOW_FETCH_SUCCESS","TV_SHOW_FETCH_FAILURE","fetchTvShows","key","arguments","length","undefined","filterValue","url","callback","newUrl","filterValues","tamp","Object","keys","forEach","setQuery","dispatch","type","fetch","then","response","ok","Error","statusText","json","item","tvShowFetchSuccess","catch","error","tvShowFetchFailure","serviceReducerToJS","store","serviceReducer","toJS","TvShowList","generateList","data","map","react_default","a","createElement","TvShowList_TvItem","show","console","log","this","props","Component","TvItem","className","alt","name","src","image","medium","rating","average","Link","to","Home","q","Grid","Row","TvShowList_TvShowList","batmanTvShowList","connect","About","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","query","match","params","generateGenres","bind","assertThisInitialized","_this2","res","setState","summary","genres","countryCode","network","country","code","countryName","original","temp","index","_this3","_this$state","Col","lg","md","sm","xs","height","lib","content","target","href","role","onClick","history","goBack","Header","style","width","backgroundColor","position","top","zIndex","lineHeight","fontSize","marginLeft","color","fontWeight","Footer","bottom","marginRight","textAlign","App","Header_Header","Switch","Route","exact","path","component","Footer_Footer","initialState","fromJS","test","loading","createStore","combineReducers","action","merge","result","payload","value","tampState","objectSpread","composeWithDevTools","applyMiddleware","thunk","configureStore","Boolean","window","location","hostname","__webpack_require__","d","__webpack_exports__","AppStore","ReactDOM","render","BrowserRouter","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72f85d54.chunk.js","sourcesContent":["export const API_SEARCH = 'http://api.tvmaze.com/search/shows?';\r\nexport const API_SINGLE_SEARCH = 'http://api.tvmaze.com/singlesearch/shows?';\r\n","\r\n/*\r\n  aksiyon sabitleri\r\n*/\r\n\r\nexport const TV_SHOW_FETCHING = 'enuygun/TV_SHOW_FETCHING';\r\nexport const TV_SHOW_FETCH_SUCCESS = 'enuygun/TV_SHOW_FETCH_SUCCESS';\r\nexport const TV_SHOW_FETCH_FAILURE = 'enuygun/TV_SHOW_FETCH_FAILURE';\r\n","\r\n\r\n// export function itemsFetchData(url) {\r\n//     return (dispatch) => {\r\n//         dispatch(itemsIsLoading(true));\r\n//         fetch(url)\r\n//             .then((response) => {\r\n//                 if (!response.ok) {\r\n//                     throw Error(response.statusText);\r\n//                 }\r\n//                 return response;\r\n//             })\r\n//             .then((response) => response.json())\r\n//             .then((items) => dispatch(itemsFetchDataSuccess(items)))\r\n//             .catch(() => dispatch(itemsHasErrored(true)));\r\n//     };\r\n// }\r\n\r\nimport { API_SEARCH } from 'paths';\r\n\r\nimport {\r\n  tvShowsFetching,\r\n  tvShowFetchSuccess,\r\n  tvShowFetchFailure,\r\n} from 'actions/serviceAction';\r\n\r\nexport function fetchTvShows(key = 'batmanShowList', filterValue = {}, url = API_SEARCH, callback = () => {}) {\r\n\r\n  const newUrl = url + setQuery(filterValue);\r\n  return (dispatch) => {\r\n    dispatch(tvShowsFetching());\r\n    fetch(newUrl) // options'a gerek yok\r\n      .then((response) => {\r\n        if (!response.ok) { throw Error(response.statusText); }\r\n        else { return response; }\r\n      })\r\n      .then(response => response.json()) // responsu parse ediyor\r\n      .then((item) => {\r\n        callback(item);\r\n        return dispatch(tvShowFetchSuccess(key, item))\r\n      })\r\n      .catch((error) => dispatch(tvShowFetchFailure(error)));\r\n  };\r\n}\r\n\r\n\r\nfunction setQuery(filterValues) {\r\n  let tamp = '';\r\n  Object.keys(filterValues).forEach((key) => {\r\n    tamp += (key +'='+ filterValues[key]);\r\n  });\r\n  return tamp;\r\n}\r\n// burada gelen bütün parameteleri path query olarak ekleten bir sey yzmak gerek\r\n// hadi bakalım\r\n","import {\r\n  TV_SHOW_FETCHING,\r\n  TV_SHOW_FETCH_SUCCESS,\r\n  TV_SHOW_FETCH_FAILURE,\r\n} from 'constants/serviceConstants';\r\n\r\nexport const simpleAction = () => dispatch => {\r\n dispatch({\r\n  type: 'SIMPLE_ACTION',\r\n  payload: 'result_of_simple_action'\r\n })\r\n}\r\n\r\n\r\nexport function toggleTodo(index) {\r\n  return { type: 'TOGGLE_TODO', index };\r\n}\r\n\r\nexport function denemeAction(key, value) {\r\n  return {\r\n    type: 'DENEME_ACTION',\r\n    key,\r\n    value,\r\n  };\r\n}\r\n\r\n\r\n// ---\r\nexport function tvShowsFetching() {\r\n  return {\r\n    type: TV_SHOW_FETCHING,\r\n  };\r\n}\r\nexport function tvShowFetchSuccess(key, response) {\r\n  return {\r\n    type: TV_SHOW_FETCH_SUCCESS,\r\n    key,\r\n    response,\r\n  };\r\n}\r\nexport function tvShowFetchFailure(error) {\r\n  return {\r\n    type: TV_SHOW_FETCH_FAILURE,\r\n    error,\r\n  };\r\n}\r\n","export function serviceReducerToJS(store) {\r\n  return store.serviceReducer.toJS();\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class TvShowList extends Component {\r\n\r\n  generateList = (data) => {\r\n    if(data) {\r\n      const tvItems = data.map((item) => {\r\n        return (<TvItem {...item.show} />);\r\n      })\r\n      return tvItems;\r\n    }\r\n    return null;\r\n  }\r\n  render() {\r\n    console.log(this.props.serviceReducer, 'hadi bakalım hayrlısı');\r\n    const items = this.generateList(this.props.data);\r\n    return (\r\n      <div>\r\n        {this.generateList(this.props.data)}\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport const TvItem = (props) => {\r\n  return (\r\n    <div className=\"items-wrap\">\r\n      <div className=\"item\">\r\n        <div className=\"img-wrap\">\r\n          <img className=\"img\" alt={props.name} src={props.image.medium}/>\r\n        </div>\r\n        <div className=\"item-content\">\r\n          <span className=\"name\">{props.name}</span>\r\n          <br/>\r\n          <span className=\"rate\">{props.rating.average || '0.0'}</span>\r\n        </div>\r\n        <div className=\"link-box\">\r\n          <Link to={'/enuygun/about/'+props.name}>\r\n            Detay\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// listeleme sayfası\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n// import { Link } from 'react-router-dom';\r\nimport { Grid, Row } from 'react-bootstrap';\r\nimport { fetchTvShows } from 'thunks/serviceMiddleware'\r\nimport { serviceReducerToJS } from 'selector';\r\nimport TvShowList from 'containers/Home/TvShowList';\r\n// import { convertToJS } from './selectors/serviceSelector';\r\n\r\nimport { API_SEARCH } from 'paths';\r\n\r\nclass Home extends Component {\r\n  componentWillMount(){\r\n    this.props.dispatch(fetchTvShows('batmanTvShowList', { q: 'batman' }, API_SEARCH));\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"tv-show-list-wrap\">\r\n        <Grid>\r\n          <Row>\r\n            <TvShowList data={(this.props.serviceReducer.batmanTvShowList || null)} />\r\n          </Row>\r\n        </Grid>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n dispatch,\r\n})\r\nconst mapStateToProps = store => ({\r\n  serviceReducer: serviceReducerToJS(store)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchTvShows } from 'thunks/serviceMiddleware'\r\nimport { serviceReducerToJS } from 'selector';\r\nimport { Grid, Row, Col } from 'react-bootstrap';\r\nimport { Markup } from 'interweave';\r\n// import { convertToJS } from './selectors/serviceSelector';\r\nimport { API_SINGLE_SEARCH } from 'paths';\r\nclass About extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      query: this.props.match.params.query || null,\r\n    }\r\n    this.generateGenres = this.generateGenres.bind(this);\r\n  }\r\n  componentWillMount() {\r\n    this.props.dispatch(fetchTvShows(this.state.query, { q: this.state.query }, API_SINGLE_SEARCH, (res) => {\r\n      this.setState({\r\n        name: res.name,\r\n        summary: res.summary,\r\n        url: res.url,\r\n        genres: res.genres,\r\n        average: res.rating.average,\r\n        countryCode: res.network.country.code,\r\n        countryName: res.network.country.name,\r\n        image: res.image.original,\r\n      });\r\n    }));\r\n  }\r\n\r\n  generateGenres(genres = []) {\r\n    let temp = '';\r\n    genres.forEach((item, index) => {\r\n      temp += item;\r\n      if(index < genres.length -1) { temp += ', '; }\r\n    });\r\n    return temp;\r\n  }\r\n\r\n  render() {\r\n    const { name, average, countryCode, countryName, image, summary, url, genres } = this.state;\r\n\r\n    return (\r\n      <div className=\"about-page-wraper\">\r\n        <Grid>\r\n          <Row>\r\n            <Col lg={12}>\r\n              <label className=\"header\"> </label>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"row-equal-height\">\r\n            <Col lg={4} md={4} sm={6} xs={12}>\r\n              <div className=\"left-box\">\r\n                <img className=\"img\" alt=\"\" src={image}/>\r\n              </div>\r\n            </Col>\r\n            <Col lg={8} md={8} sm={6} xs={12}>\r\n              <div className=\"right-box\">\r\n                <label className=\"header\">{name}</label>\r\n                <div className=\"empty1\">  </div>\r\n\r\n                <div className=\"rate-country\">\r\n                  <span className=\"rate\">\r\n                    Rating: {average}\r\n                  </span>\r\n                  <span className=\"country\">\r\n                    Country: {countryName} <img alt={name} height=\"24\" src={'https://www.countryflags.io/'+countryCode+'/flat/64.png'} />\r\n                  </span>\r\n                </div>\r\n                <div className=\"summary\">\r\n                  <label className=\"summary-header\">Summary</label>\r\n                  <Markup content={summary} />\r\n                </div>\r\n                <div className=\"genres\">\r\n                  {this.generateGenres(genres)}\r\n                </div>\r\n                <div className=\"link-box-goBack\">\r\n                  <a target=\"_blank\" href={url}> Go to TVmaze.</a>\r\n                </div>\r\n                <div className=\"link-box\">\r\n                  <a role=\"button\" onClick={() => this.props.history.goBack()}> Return Home Page</a>\r\n                </div>\r\n\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n dispatch,\r\n})\r\nconst mapStateToProps = (store) => ({\r\n  serviceReducer: serviceReducerToJS(store)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(About);\r\n\r\n\r\n// burada ufak bir sorunumuz var\r\n// anlamıs degılım acaba baska bir reducer eklememiz falan mı gerekiyor\r\n","import React, { Component } from 'react';\r\n\r\n// import { convertToJS } from './selectors/serviceSelector';\r\n\r\nexport default class Header extends Component {\r\n\r\n  render() {\r\n    console.log(this.props.serviceReducer, 'hadi bakalım hayrlısı');\r\n    return (\r\n      <div style={{width: '100%', backgroundColor: '#0f2133', position: 'fixed', height: '40px', top: 0, zIndex: 9999 }}>\r\n        <div style={{ lineHeight: '40px', fontSize: '20px', marginLeft: '20px', color: '#fff', fontWeight: 600  }}>\r\n          EnUygun Study Case\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n// listeleme sayfası\r\n","import React, { Component } from 'react';\r\n\r\n// import { convertToJS } from './selectors/serviceSelector';\r\n\r\nexport default class Footer extends Component {\r\n\r\n  render() {\r\n    console.log(this.props.serviceReducer, 'hadi bakalım hayrlısı');\r\n    return (\r\n      <div style={{width: '100%', backgroundColor: '#0f213333', position: 'absolute', height: '20px', bottom: 0, zIndex: 9999 }}>\r\n        <div style={{ lineHeight: '20px', fontSize: '12px', marginRight: '20px', color: '#fff66', textAlign:'right',  }}>\r\n          Ceyhun ÇELİK\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n// listeleme sayfası\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Home from 'containers/Home';\r\nimport About from 'containers/About';\r\nimport Header from 'containers/Header';\r\nimport Footer from 'containers/Footer';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n        <Header />\r\n        <div className=\"home-page-wrap\">\r\n        </div>\r\n        <Switch>\r\n          <Route exact path='/enuygun' component={Home}/>\r\n          <Route exact path='/enuygun/about/:query' component={About}/>\r\n        </Switch>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n// tasarım calısmalarına baslamak gerek artık\r\n// biter bitmez de yatar uyuruz diyecem olmaz daha bi wideframe hazırlamamız gerekiyor\r\n// way arkadas\r\n","import { fromJS } from 'immutable';\r\n// store erisimini kısıtlamak icin immutabledan faydalanıldı.\r\n\r\nimport {\r\n  TV_SHOW_FETCHING,\r\n  TV_SHOW_FETCH_SUCCESS,\r\n  TV_SHOW_FETCH_FAILURE,\r\n} from 'constants/serviceConstants';\r\n\r\nexport const initialState = fromJS({\r\n  test: '',\r\n  index: 0,\r\n  // ---\r\n  loading: false,\r\n});\r\n\r\nexport default (state = initialState, action) => {\r\n switch (action.type) {\r\n  case 'SIMPLE_ACTION': {\r\n    return state.merge({\r\n      result: action.payload\r\n    });\r\n  }\r\n\r\n  case 'TOGGLE_TODO': {\r\n    const { index} = action;\r\n    return state.merge({\r\n        index,\r\n    });\r\n  }\r\n  case 'DENEME_ACTION': {\r\n    const { key, value } = action;\r\n    const tampState = state.toJS();\r\n    tampState[key] = value;\r\n    return state.merge({\r\n      ...tampState,\r\n    });\r\n  }\r\n\r\n  // -------\r\n  case TV_SHOW_FETCHING: {\r\n    return state.merge({\r\n      loading: true,\r\n    });\r\n  }\r\n  case TV_SHOW_FETCH_SUCCESS: {\r\n    const { key, response } = action;\r\n    const tampState = state.toJS();\r\n    tampState[key] = response;\r\n    // reducer dolayısıyla aksiyonları daha dinamik hale getirmek icin !\r\n    // bu study case de pek gerekli olmasada her zaman daha fazla kolaylık saglayacaktır\r\n    return state.merge({\r\n      ...tampState,\r\n      loading: false,\r\n    });\r\n  }\r\n  case TV_SHOW_FETCH_FAILURE: {\r\n    const { error } = action;\r\n    return state.merge({\r\n      error,\r\n      loading: false,\r\n    });\r\n  }\r\n  default:\r\n   return state\r\n }\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport serviceReducer from 'reducers/serviceReducer';\r\n\r\nconst store = createStore(\r\n  combineReducers({ serviceReducer }),\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n);\r\nexport default function configureStore(initialState={}) {\r\n // return createStore(\r\n //   combineReducers({ serviceReducer }),\r\n //   applyMiddleware(thunk)\r\n // );\r\n return store;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport './globalStyles';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport configureStore from './configureStore';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nexport const AppStore = configureStore();\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={configureStore()}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>\r\n  , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n// test commity\r\n"],"sourceRoot":""}